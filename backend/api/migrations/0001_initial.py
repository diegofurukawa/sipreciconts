# Generated by Django 5.0 on 2024-10-30 01:33

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="AssetGroup",
            fields=[
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Data de Criação"
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Última Atualização"
                    ),
                ),
                ("enabled", models.BooleanField(default=True, verbose_name="Ativo")),
                ("name", models.CharField(max_length=100, verbose_name="Nome")),
                (
                    "code",
                    models.CharField(max_length=20, unique=True, verbose_name="Código"),
                ),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="Descrição"),
                ),
                (
                    "assetgroup_id",
                    models.BigAutoField(
                        editable=False, primary_key=True, serialize=False
                    ),
                ),
            ],
            options={
                "verbose_name": "Grupo de Ativo",
                "verbose_name_plural": "Insumos - Grupos",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Company",
            fields=[
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Data de Criação"
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Última Atualização"
                    ),
                ),
                ("enabled", models.BooleanField(default=True, verbose_name="Ativo")),
                (
                    "name",
                    models.CharField(max_length=100, verbose_name="Nome da Empresa"),
                ),
                (
                    "document",
                    models.CharField(
                        blank=True,
                        max_length=14,
                        null=True,
                        unique=True,
                        verbose_name="CNPJ",
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        blank=True, max_length=20, null=True, verbose_name="Telefone"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, null=True, verbose_name="Email"
                    ),
                ),
                (
                    "address",
                    models.TextField(blank=True, null=True, verbose_name="Endereço"),
                ),
                (
                    "company_id",
                    models.CharField(
                        help_text="Código único de identificação da empresa",
                        max_length=30,
                        primary_key=True,
                        serialize=False,
                        verbose_name="Código da Empresa",
                    ),
                ),
            ],
            options={
                "verbose_name": "Empresa",
                "verbose_name_plural": "Empresas",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Location",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Nome")),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="Descrição"),
                ),
                ("enabled", models.BooleanField(default=True, verbose_name="Ativo")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Criado em"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Atualizado em"),
                ),
            ],
            options={
                "verbose_name": "Localização",
                "verbose_name_plural": "Localizações",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="AssetCategory",
            fields=[
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Data de Criação"
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Última Atualização"
                    ),
                ),
                ("enabled", models.BooleanField(default=True, verbose_name="Ativo")),
                ("name", models.CharField(max_length=100, verbose_name="Nome")),
                (
                    "code",
                    models.CharField(max_length=20, unique=True, verbose_name="Código"),
                ),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="Descrição"),
                ),
                (
                    "assetcategory_id",
                    models.BigAutoField(
                        editable=False, primary_key=True, serialize=False
                    ),
                ),
                (
                    "asset_group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="categories",
                        to="api.assetgroup",
                        verbose_name="Grupo de Ativo",
                    ),
                ),
                (
                    "company",
                    models.ForeignKey(
                        help_text="Empresa à qual este registro pertence",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="company_assetcategorys",
                        to="api.company",
                        verbose_name="Empresa",
                    ),
                ),
            ],
            options={
                "verbose_name": "Categoria de Ativo",
                "verbose_name_plural": "Insumos - Categorias",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Asset",
            fields=[
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Data de Criação"
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Última Atualização"
                    ),
                ),
                ("enabled", models.BooleanField(default=True, verbose_name="Ativo")),
                ("name", models.CharField(max_length=200, verbose_name="Nome")),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="Descrição"),
                ),
                (
                    "asset_code",
                    models.CharField(
                        max_length=50, unique=True, verbose_name="Código do Ativo"
                    ),
                ),
                (
                    "patrimony_code",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        unique=True,
                        verbose_name="Código Patrimonial",
                    ),
                ),
                (
                    "serial_number",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Número de Série",
                    ),
                ),
                (
                    "quantity",
                    models.DecimalField(
                        decimal_places=3,
                        default=0,
                        max_digits=15,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.000"))
                        ],
                        verbose_name="Quantidade",
                    ),
                ),
                (
                    "minimum_quantity",
                    models.DecimalField(
                        decimal_places=3,
                        default=0,
                        max_digits=15,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.000"))
                        ],
                        verbose_name="Quantidade Mínima",
                    ),
                ),
                (
                    "unit_measure",
                    models.CharField(max_length=20, verbose_name="Unidade de Medida"),
                ),
                (
                    "purchase_value",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=15,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                        verbose_name="Valor de Compra",
                    ),
                ),
                (
                    "current_value",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=15,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                        verbose_name="Valor Atual",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("available", "Disponível"),
                            ("in_use", "Em Uso"),
                            ("maintenance", "Em Manutenção"),
                            ("reserved", "Reservado"),
                            ("disposed", "Descartado"),
                            ("sold", "Vendido"),
                        ],
                        default="available",
                        max_length=20,
                        verbose_name="Status",
                    ),
                ),
                (
                    "acquisition_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Data de Aquisição"
                    ),
                ),
                (
                    "warranty_expiration",
                    models.DateField(
                        blank=True, null=True, verbose_name="Vencimento da Garantia"
                    ),
                ),
                (
                    "next_maintenance",
                    models.DateField(
                        blank=True, null=True, verbose_name="Próxima Manutenção"
                    ),
                ),
                (
                    "location",
                    models.CharField(
                        blank=True,
                        max_length=200,
                        null=True,
                        verbose_name="Localização",
                    ),
                ),
                (
                    "notes",
                    models.TextField(blank=True, null=True, verbose_name="Observações"),
                ),
                (
                    "asset_id",
                    models.BigAutoField(
                        editable=False, primary_key=True, serialize=False
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="api.assetcategory",
                        verbose_name="Categoria",
                    ),
                ),
                (
                    "asset_group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="api.assetgroup",
                        verbose_name="Grupo",
                    ),
                ),
                (
                    "company",
                    models.ForeignKey(
                        help_text="Empresa à qual este registro pertence",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="company_assets",
                        to="api.company",
                        verbose_name="Empresa",
                    ),
                ),
            ],
            options={
                "verbose_name": "Ativo",
                "verbose_name_plural": "Insumos",
                "ordering": ["name"],
            },
        ),
        migrations.AddField(
            model_name="assetgroup",
            name="company",
            field=models.ForeignKey(
                help_text="Empresa à qual este registro pertence",
                on_delete=django.db.models.deletion.PROTECT,
                related_name="company_assetgroups",
                to="api.company",
                verbose_name="Empresa",
            ),
        ),
        migrations.CreateModel(
            name="Customer",
            fields=[
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Data de Criação"
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Última Atualização"
                    ),
                ),
                ("enabled", models.BooleanField(default=True, verbose_name="Ativo")),
                ("name", models.CharField(max_length=200, verbose_name="Nome")),
                (
                    "document",
                    models.CharField(
                        blank=True,
                        max_length=20,
                        null=True,
                        unique=True,
                        verbose_name="Documento",
                    ),
                ),
                (
                    "customer_type",
                    models.CharField(
                        choices=[
                            ("individual", "Individual"),
                            ("business", "Empresarial"),
                        ],
                        default="individual",
                        max_length=50,
                        verbose_name="Tipo de Cliente",
                    ),
                ),
                ("celphone", models.CharField(max_length=20, verbose_name="Celular")),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, null=True, verbose_name="E-mail"
                    ),
                ),
                (
                    "address",
                    models.TextField(blank=True, null=True, verbose_name="Endereço"),
                ),
                (
                    "complement",
                    models.TextField(blank=True, null=True, verbose_name="Complemento"),
                ),
                (
                    "customer_id",
                    models.BigAutoField(
                        editable=False, primary_key=True, serialize=False
                    ),
                ),
                (
                    "company",
                    models.ForeignKey(
                        help_text="Empresa à qual este registro pertence",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="company_customers",
                        to="api.company",
                        verbose_name="Empresa",
                    ),
                ),
            ],
            options={
                "verbose_name": "Cliente",
                "verbose_name_plural": "Clientes",
                "db_table": "customer",
            },
        ),
        migrations.CreateModel(
            name="AssetMovement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "movement_type",
                    models.CharField(
                        choices=[
                            ("entrada", "Entrada"),
                            ("saida", "Saída"),
                            ("transferencia", "Transferência"),
                        ],
                        max_length=20,
                        verbose_name="Tipo de Movimentação",
                    ),
                ),
                (
                    "movement_date",
                    models.DateField(verbose_name="Data da Movimentação"),
                ),
                (
                    "quantity",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="Quantidade"
                    ),
                ),
                (
                    "unit_value",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="Valor Unitário"
                    ),
                ),
                (
                    "total_value",
                    models.DecimalField(
                        decimal_places=2,
                        editable=False,
                        max_digits=15,
                        verbose_name="Valor Total",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="Descrição"),
                ),
                (
                    "document_number",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Número do Documento",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pendente", "Pendente"),
                            ("aprovado", "Aprovado"),
                            ("rejeitado", "Rejeitado"),
                            ("cancelado", "Cancelado"),
                        ],
                        default="pendente",
                        max_length=20,
                        verbose_name="Status",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(auto_now_add=True, verbose_name="Criado em"),
                ),
                (
                    "updated",
                    models.DateTimeField(auto_now=True, verbose_name="Atualizado em"),
                ),
                (
                    "approved_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Aprovado em"
                    ),
                ),
                ("enabled", models.BooleanField(default=True, verbose_name="Ativo")),
                (
                    "approved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="approved_asset_movements",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Aprovado por",
                    ),
                ),
                (
                    "asset",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="movements",
                        to="api.asset",
                        verbose_name="Ativo",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="created_asset_movements",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Criado por",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="updated_asset_movements",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Atualizado por",
                    ),
                ),
                (
                    "from_location",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="movements_as_origin",
                        to="api.location",
                        verbose_name="Local de Origem",
                    ),
                ),
                (
                    "to_location",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="movements_as_destination",
                        to="api.location",
                        verbose_name="Local de Destino",
                    ),
                ),
            ],
            options={
                "verbose_name": "Movimentação de Ativo",
                "verbose_name_plural": "Movimentações de Ativos",
                "ordering": ["-movement_date", "-created"],
            },
        ),
        migrations.CreateModel(
            name="Supply",
            fields=[
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Data de Criação"
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Última Atualização"
                    ),
                ),
                ("enabled", models.BooleanField(default=True, verbose_name="Ativo")),
                ("name", models.CharField(max_length=200, verbose_name="Nome")),
                (
                    "nick_name",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="Apelido"
                    ),
                ),
                (
                    "ean_code",
                    models.CharField(
                        blank=True,
                        max_length=13,
                        null=True,
                        unique=True,
                        verbose_name="Código EAN",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="Descrição"),
                ),
                (
                    "unit_measure",
                    models.CharField(
                        choices=[
                            ("UN", "Unidade"),
                            ("KG", "Kilograma"),
                            ("ML", "Mililitro"),
                        ],
                        default="UN",
                        max_length=2,
                        verbose_name="Unidade de Medida",
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("VEI", "Veículo"),
                            ("ARM", "Armamento"),
                            ("MAT", "Material"),
                            ("UNI", "Uniforme"),
                        ],
                        default="MAT",
                        max_length=3,
                        verbose_name="Tipo",
                    ),
                ),
                (
                    "supply_id",
                    models.BigAutoField(
                        editable=False, primary_key=True, serialize=False
                    ),
                ),
                (
                    "company",
                    models.ForeignKey(
                        help_text="Empresa à qual este registro pertence",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="company_supplys",
                        to="api.company",
                        verbose_name="Empresa",
                    ),
                ),
            ],
            options={
                "verbose_name": "Supply",
                "verbose_name_plural": "Insumos - Itens",
                "db_table": "supplies",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Tax",
            fields=[
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Data de Criação"
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Última Atualização"
                    ),
                ),
                ("enabled", models.BooleanField(default=True, verbose_name="Ativo")),
                (
                    "description",
                    models.CharField(max_length=100, verbose_name="Descrição"),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[("tax", "Imposto"), ("fee", "Taxa")],
                        max_length=10,
                        verbose_name="Tipo",
                    ),
                ),
                ("acronym", models.CharField(max_length=10, verbose_name="Sigla")),
                (
                    "group",
                    models.CharField(
                        choices=[
                            ("federal", "Federal"),
                            ("state", "Estadual"),
                            ("municipal", "Municipal"),
                            ("other", "Outro"),
                        ],
                        max_length=20,
                        verbose_name="Grupo",
                    ),
                ),
                (
                    "calc_operator",
                    models.CharField(
                        choices=[
                            ("%", "Percentual"),
                            ("0", "Fixo"),
                            ("+", "Adição"),
                            ("-", "Subtração"),
                            ("*", "Multiplicação"),
                            ("/", "Divisão"),
                        ],
                        default="%",
                        max_length=1,
                        verbose_name="Operador de Cálculo",
                    ),
                ),
                (
                    "value",
                    models.DecimalField(
                        decimal_places=4, max_digits=10, verbose_name="Valor"
                    ),
                ),
                (
                    "tax_id",
                    models.BigAutoField(
                        editable=False, primary_key=True, serialize=False
                    ),
                ),
                (
                    "company",
                    models.ForeignKey(
                        help_text="Empresa à qual este registro pertence",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="company_taxs",
                        to="api.company",
                        verbose_name="Empresa",
                    ),
                ),
            ],
            options={
                "verbose_name": "Imposto",
                "verbose_name_plural": "Impostos",
                "db_table": "tax",
            },
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Data de Criação"
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Última Atualização"
                    ),
                ),
                ("enabled", models.BooleanField(default=True, verbose_name="Ativo")),
                (
                    "user_name",
                    models.CharField(
                        help_text="Nome completo do usuário",
                        max_length=255,
                        verbose_name="Nome do Usuário",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        help_text="E-mail do usuário (será usado para login)",
                        max_length=254,
                        unique=True,
                        verbose_name="E-mail",
                    ),
                ),
                (
                    "login",
                    models.CharField(
                        help_text="Login de acesso do usuário",
                        max_length=50,
                        unique=True,
                        verbose_name="Login",
                    ),
                ),
                (
                    "password",
                    models.CharField(
                        help_text="Senha de acesso do usuário",
                        max_length=128,
                        verbose_name="Senha",
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[("Admin", "Administrador"), ("Usuario", "Usuário")],
                        default="Usuario",
                        help_text="Tipo de usuário (Administrador ou Usuário)",
                        max_length=10,
                        verbose_name="Tipo",
                    ),
                ),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True,
                        help_text="Data e hora do último acesso",
                        null=True,
                        verbose_name="Último Login",
                    ),
                ),
                (
                    "user_id",
                    models.BigAutoField(
                        editable=False, primary_key=True, serialize=False
                    ),
                ),
                (
                    "company",
                    models.ForeignKey(
                        help_text="Empresa à qual este registro pertence",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="company_users",
                        to="api.company",
                        verbose_name="Empresa",
                    ),
                ),
            ],
            options={
                "verbose_name": "Usuário",
                "verbose_name_plural": "Usuários",
                "ordering": ["user_name"],
            },
        ),
        migrations.AddIndex(
            model_name="assetgroup",
            index=models.Index(fields=["code"], name="api_assetgr_code_b96114_idx"),
        ),
        migrations.AddIndex(
            model_name="assetcategory",
            index=models.Index(fields=["code"], name="api_assetca_code_113d81_idx"),
        ),
        migrations.AddIndex(
            model_name="asset",
            index=models.Index(
                fields=["asset_code"], name="api_asset_asset_c_3dfeaa_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="asset",
            index=models.Index(
                fields=["patrimony_code"], name="api_asset_patrimo_020ca6_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="asset",
            index=models.Index(fields=["status"], name="api_asset_status_56c938_idx"),
        ),
        migrations.AddIndex(
            model_name="assetmovement",
            index=models.Index(
                fields=["movement_date", "movement_type"],
                name="api_assetmo_movemen_0cc2b7_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="assetmovement",
            index=models.Index(
                fields=["created"], name="api_assetmo_created_6a6824_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="assetmovement",
            index=models.Index(fields=["status"], name="api_assetmo_status_0178eb_idx"),
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(fields=["email"], name="api_user_email_a7eefd_idx"),
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(fields=["login"], name="api_user_login_308c74_idx"),
        ),
        migrations.AddConstraint(
            model_name="user",
            constraint=models.UniqueConstraint(
                condition=models.Q(("enabled", True)),
                fields=("email", "company"),
                name="unique_active_email_per_company",
            ),
        ),
        migrations.AddConstraint(
            model_name="user",
            constraint=models.UniqueConstraint(
                condition=models.Q(("enabled", True)),
                fields=("login", "company"),
                name="unique_active_login_per_company",
            ),
        ),
    ]
